<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="true"
      internalLogLevel="Warn"
      internalLogToTrace="true"
      internalLogFile="d:\Logs\nlog-internal.log">
  <!-- optional, add some variables
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->

  <variable name="logDirectory" value="${basedir}/logs/${shortdate}"/>
  <!--变量申明语法-->
  <!--
  See https://github.com/nlog/nlog/wiki/Configuration-file
  for information on customizing logging rules and outputs.
   -->
  <targets async="true">

    <!--
    add your targets here
    See https://github.com/nlog/NLog/wiki/Targets for possible targets.
    See https://github.com/nlog/NLog/wiki/Layout-Renderers for the possible layout renderers.
    -->

    <!--
    Write events to a file with the date in the filename.
    <target xsi:type="File" name="f" fileName="${basedir}/logs/${shortdate}.log"
            layout="${longdate} ${uppercase:${level}} ${message}" />
    -->

    <!--<target name="gmail" xsi:type="Mail"
            smtpServer="smtp.sina.com"
            smtpPort="25"
            smtpAuthentication="Basic"
            smtpUserName="wufazhi000"
            smtpPassword=""
            enableSsl="true"
            from="wufazhi000@sina.com"
            to="870256658@qq.com"
            cc=""></target>-->

    <target name="log" xsi:type="AsyncWrapper"  overflowAction="Discard">
      <target xsi:type="File" fileName="${basedir}/logs/${shortdate}.log" layout="${longdate} ${level:uppercase=true} ${event-context:item=Action} ${message} ${event-context:item=Amount} ${stacktrace}" />
    </target>

    <!-- write log message to database     
    <target name="db" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">-->
    <target name="db" xsi:type="AsyncWrapper"  overflowAction="Discard">
      <target xsi:type="Database" dbProvider="MySql.Data.MySqlClient.MySqlConnection, MySql.Data" connectionString="Server=127.0.0.1;Port=3306;Database=mydb;Uid=root;Pwd=tomorrow;Allow Zero Datetime=false;charset=utf8;pooling=true;"
       keepConnection="true"
         commandType="Text"
         commandText="INSERT INTO wu_base_log(CreatedAt,Level,Message,IP,Operater,OperationType,StackTrace,Exception) VALUES(@when, @level, @message, @ip, @operater,@operatertype,@stacktrace,@exception);">
        <parameter name="@when" layout="${date}"/>
        <parameter name="@level" layout="${level:uppercase=true}" />
        <parameter name="@message" layout="${message}"/>
        <parameter name="@ip" layout="${event-context:item=IP}"/>
        <parameter name="@operater" layout="${event-context:item=Operater}" />
        <parameter name="@operatertype" layout="${event-context:item=OperationType}" />
        <parameter name="@stacktrace" layout="${stacktrace}" />
        <parameter name="@exception" layout="${exception}"/>
      </target>
    </target>

    <!--write log message to Visual Studio Output-->
    <target name="debugger" xsi:type="Debugger" layout="NLog: ${date:format=HH\:mm\:ss} | ${level:uppercase=true:padding=-5} | ${message}" />
  </targets>

  <rules>
    <!-- add your logging rules here -->

    <!--
    Write all events with minimal level of Debug (So Debug, Info, Warn, Error and Fatal, but not Trace)  to "f"
    <logger name="*" minlevel="Debug" writeTo="f" />
    -->
    <!--TRACE,DEBUG,INFO,WARN,ERROR,FATAL-->
    <!--<logger name="*" minlevel="Trace" writeTo="db" />-->
    <!--INFO,WARN,ERROR,FATAL-->
    <logger name="*" minlevel="Info" writeTo="db" />
    <!--DEBUG,INFO,WARN,ERROR,FATAL-->
    <!--<logger name="*" minlevel="Debug" writeTo="log" />-->

  </rules>
</nlog>
